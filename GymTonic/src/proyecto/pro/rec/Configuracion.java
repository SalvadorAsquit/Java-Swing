/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto.pro.rec;

import Clases.Clase;
import Clases.Cliente;
import Clases.Empleado;
import Clases.Persona;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Eskit
 */
public class Configuracion extends javax.swing.JFrame {
          int usuarioconectado; // esta variable dice cual es el usuario
          int tipousuario; // esta variable dice sie s cliente admin o empleado
    /**
     * Creates new form Configuracion
     */
    public Configuracion() {
        initComponents();
        this.setLocationRelativeTo(null);
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        password = new javax.swing.JPasswordField();
        usuario = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        namebox = new javax.swing.JTextField();
        idbox = new javax.swing.JTextField();
        usubox = new javax.swing.JTextField();
        passbox = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel3.setText("Confirme su usuario");

        jButton1.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jButton1.setText("concectarse");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        password.setText("jPasswordField1");

        usuario.setText("Admin");

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel2.setText("Contraseña");

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel1.setText("Usuario");

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel4.setText("Nombre");

        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel5.setText("Dni");

        jLabel6.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel6.setText("Usuario");

        jLabel7.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel7.setText("Contraseña");

        jButton2.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jButton2.setText("Editar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jButton3.setText("Salir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(usuario)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE))
                            .addComponent(jLabel6)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton1))
                                    .addComponent(jLabel2)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(usubox, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(namebox)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jButton2))
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(idbox)
                                .addComponent(passbox, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(namebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usubox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        List <Cliente> listCliente;
        
        try {
            ObjectInputStream ficherocargaCliente = new ObjectInputStream(new FileInputStream("Cliente.dat"));
            listCliente =(List <Cliente>) ficherocargaCliente.readObject();
            ficherocargaCliente.close();
        } catch (Exception ex) {
            listCliente= new LinkedList();
            Logger.getLogger(ProyectoProRec.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        List <Persona> listPersona;
        
        try {
            ObjectInputStream ficherocargaCliente = new ObjectInputStream(new FileInputStream("Admin.dat"));
            listPersona =(List <Persona>) ficherocargaCliente.readObject();
            ficherocargaCliente.close();
        } catch (Exception ex) {
            listPersona= new LinkedList();
            Logger.getLogger(ProyectoProRec.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        List <Empleado> listEmpleado;
        
        try {
            ObjectInputStream ficherocargaEmpleado = new ObjectInputStream(new FileInputStream("Empleado.dat"));
            listEmpleado =(List <Empleado>) ficherocargaEmpleado.readObject();
            ficherocargaEmpleado.close();
        } catch (Exception ex) {
            listEmpleado= new LinkedList();
            Logger.getLogger(ProyectoProRec.class.getName()).log(Level.SEVERE, null, ex);
        }
        
      
        
        
        boolean clienteexiste = false;
        boolean empleadoexiste = false;

        String usu = usuario.getText();
        String pass = password.getText();
        String Admin = "Admin";

        if (usu.equals(Admin) && pass.equals(Admin)) {
            this.usubox.setText("Admin");
            this.passbox.setText("Admin");
            tipousuario=0;
            
        } else {
            for (int i = 0; i < listCliente.size(); i++) {
                if (listCliente.get(i).getUsuario().equals(usu) && listCliente.get(i).getContraseña().equals(pass)) {
                    clienteexiste = true;
                     if (clienteexiste) {
                        usuarioconectado = listCliente.get(i).getNumeroSocio();
                        tipousuario=1;
            }       
                }
            }
            if (clienteexiste) {
                 this.usubox.setText(listCliente.get(usuarioconectado).getUsuario());
                 this.idbox.setText(listCliente.get(usuarioconectado).getDni());
                 this.namebox.setText(listCliente.get(usuarioconectado).getNombre());
                 this.passbox.setText(listCliente.get(usuarioconectado).getContraseña());

            } else {
                for (int i = 0; i < listEmpleado.size(); i++) {
                    if (listEmpleado.get(i).getUsuario().equals(usu) && listEmpleado.get(i).getContraseña().equals(pass)) {
                        empleadoexiste = true;
                        if (empleadoexiste) {
                         usuarioconectado = listEmpleado.get(i).getId();
                         tipousuario=2;
                    }
                }
                if (empleadoexiste) {
                 this.usubox.setText(listEmpleado.get(usuarioconectado).getUsuario());
                 this.idbox.setText(listEmpleado.get(usuarioconectado).getDni());
                 this.namebox.setText(listEmpleado.get(usuarioconectado).getNombre());
                 this.passbox.setText(listEmpleado.get(usuarioconectado).getContraseña());
                    
                } else {
                    JOptionPane.showMessageDialog(this, "Login incorrecto", "Usuario", JOptionPane.PLAIN_MESSAGE);

                }}}}
            

       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         String nombre = namebox.getText();
         String dni = idbox.getText();
        String usuario = usubox.getText();
        String contraseña = passbox.getText();
    
         List <Cliente> listCliente;
        
        try {
            ObjectInputStream ficherocargaCliente = new ObjectInputStream(new FileInputStream("Cliente.dat"));
            listCliente =(List <Cliente>) ficherocargaCliente.readObject();
            ficherocargaCliente.close();
        } catch (Exception ex) {
            listCliente= new LinkedList();
            Logger.getLogger(ProyectoProRec.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        List <Empleado> listEmpleado;
        
        try {
            ObjectInputStream ficherocargaEmpleado = new ObjectInputStream(new FileInputStream("Empleado.dat"));
            listEmpleado =(List <Empleado>) ficherocargaEmpleado.readObject();
            ficherocargaEmpleado.close();
        } catch (Exception ex) {
            listEmpleado= new LinkedList();
            Logger.getLogger(ProyectoProRec.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        if (tipousuario==0){
       
        JOptionPane.showMessageDialog(this, "nose puede cambiar el admin", "Usuario", JOptionPane.PLAIN_MESSAGE);
        }else{
            if(tipousuario==1){
             Cliente d = new Cliente(nombre,dni,usuario,contraseña);
             int id = listCliente.get(usuarioconectado).getNumeroSocio();
             double cuota = listCliente.get(usuarioconectado).getCuota();
             listCliente.remove(listCliente.get(usuarioconectado));
             d.setNumeroSocio(id);
             d.setCuota(cuota);
             listCliente.add(d);
             JOptionPane.showMessageDialog(this, "Se ha cambiado los datos", "Usuario", JOptionPane.PLAIN_MESSAGE);
            }else{
            if(tipousuario==3){
             Empleado d = new Empleado(nombre,dni,usuario,contraseña);
             int id = listEmpleado.get(usuarioconectado).getId();
             double sueldo = listEmpleado.get(usuarioconectado).getSueldo();
             listEmpleado.remove(listEmpleado.get(usuarioconectado));
             d.setId(id);
             d.setSueldo(sueldo);
             listEmpleado.add(d);
             JOptionPane.showMessageDialog(this, "Se ha cambiado los datos", "Usuario", JOptionPane.PLAIN_MESSAGE);
            }
        
        }
        
        
        
         try {
            ObjectOutputStream fichero = new  ObjectOutputStream(new FileOutputStream("Cliente.dat"));
            fichero.writeObject(listCliente);
            fichero.close();
        } catch (IOException ex) {
            Logger.getLogger(ProyectoProRec.class.getName()).log(Level.SEVERE, null, ex);
        }
         
          try {
            ObjectOutputStream fichero = new  ObjectOutputStream(new FileOutputStream("Empleado.dat"));
            fichero.writeObject(listEmpleado);
            fichero.close();
        } catch (IOException ex) {
            Logger.getLogger(ProyectoProRec.class.getName()).log(Level.SEVERE, null, ex);
        }}
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Configuracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Configuracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Configuracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Configuracion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Configuracion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField idbox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField namebox;
    private javax.swing.JTextField passbox;
    private javax.swing.JPasswordField password;
    private javax.swing.JTextField usuario;
    private javax.swing.JTextField usubox;
    // End of variables declaration//GEN-END:variables
}
